plugins {
    id 'java'
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    maven {
        name = 'CrowdinTranslate source'
        url = 'https://minecraft.guntram.de/maven/'
    }
    maven {
        url = 'https://jitpack.io'
    }
    maven {
        url = 'https://maven.shedaniel.me/'
    }
    maven {
        url = 'https://maven.isxander.dev/releases'
    }
    maven {
        url = 'https://maven.terraformersmc.com/releases/'
    }
    maven {
        url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        url = 'https://minecraft.guntram.de/maven/'
    }
    maven {
        name = 'TerraformersMC'
        url = 'https://maven.terraformersmc.com/'
    }
    maven {
        name = 'Modrinth'
        url = 'https://api.modrinth.com/maven'
    }
}

dependencies {
    // Minecraft
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    // Fabric Loader and API
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Config
    modImplementation "com.github.Lortseam.completeconfig:base:${project.complconfig}"
    modImplementation "com.github.Lortseam.completeconfig:gui-yacl:${project.complconfig}"

    // ModMenu
    modImplementation "com.terraformersmc:modmenu:${project.modmenu}"

    // WTHIT and BadPackets
    modImplementation "maven.modrinth:wthit:${project.wthit}"
    modImplementation "maven.modrinth:badpackets:${project.badpackets}"

    // GeckoLib
    modImplementation "software.bernie.geckolib:${project.geckolib}"

    // Crowdin Translate
    modImplementation "de.guntram.mcmod:crowdin-translate:${project.crowdin}"
    include "de.guntram.mcmod:crowdin-translate:${project.crowdin}"

    // EMI
    modCompileOnly "dev.emi:emi-fabric:${project.emi}:api"
    modLocalRuntime "dev.emi:emi-fabric:${project.emi}"

    // Icarus
    modImplementation "maven.modrinth:icarus:${project.icarus}"
}

processResources {
    inputs.property 'version', project.version
    filteringCharset 'UTF-8'

    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from('LICENSE') {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

build {
    dependsOn 'downloadTranslations'
}
