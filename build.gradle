//for
buildscript {
    dependencies {
        classpath 'de.guntram.mcmod:crowdin-translate:1.3+1.17'
    }
    repositories {
        maven {
            name = 'CrowdinTranslate source'
            url = "https://minecraft.guntram.de/maven/"
        }
    }
}
plugins {
    id 'fabric-loom' version '0.13-SNAPSHOT'
    id 'maven-publish'
}

apply plugin: 'de.guntram.mcmod.crowdin-translate'
crowdintranslate.crowdinProjectName = 'dayofmind-additions'
crowdintranslate.minecraftProjectName = 'additions'
crowdintranslate.verbose = true

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.

    //added Mods
    //modMenu
    maven{
        url = "https://maven.terraformersmc.com/releases/"
    }
    //REI & Architectury
    maven { url "<https://maven.shedaniel.me/>" }
    maven { url "<https://maven.architectury.dev/>" }
    //WTHIT
    maven {
        url = "https://maven.bai.lol"
    }
    //geckolib
    maven {
        url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }

    //complete config
    maven {
        url = 'https://jitpack.io'
    }
    maven {
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        url = "https://maven.shedaniel.me/"
    }
    maven {
        url = "https://maven.siphalor.de/"
    }
    //crowdin
    maven {
        url = "https://minecraft.guntram.de/maven/"
    }
    //jei only runtime
    maven {
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url = "https://modmaven.dev"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    //added mods
    //modmenu
    modImplementation "com.terraformersmc:${project.modmenu}"
    //WTHIT
    modRuntimeOnly "mcp.mobius.waila:wthit:${project.wthit}"
    modRuntimeOnly "lol.bai:badpackets:${project.badpackets}"
    //geckolib
    modImplementation "software.bernie.geckolib:${project.geckolib}"
    //complete config
    modImplementation("com.gitlab.Lortseam.completeconfig:base:${project.completeconfig}")
    //cloth config modul
    modImplementation("com.gitlab.Lortseam.completeconfig:gui-cloth:${project.completeconfig}")
    //crowdin
    modImplementation("de.guntram.mcmod:crowdin-translate:${project.crowdin}")
    include "de.guntram.mcmod:crowdin-translate:${project.crowdin}"
    //JEI only runtime
    modRuntimeOnly "mezz.jei:${project.jei}"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
build {
    dependsOn downloadTranslations
}